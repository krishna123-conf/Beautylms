# Beauty LMS Production Environment Configuration
# Copy this file to .env.production and update with your actual values

# ===========================
# SERVER CONFIGURATION
# ===========================
NODE_ENV=production
PORT=3000

# ===========================
# FIREBASE CONFIGURATION
# ===========================
# Firebase project ID from your Firebase console
FIREBASE_PROJECT_ID=your-firebase-project-id

# Option 1: Path to service account key file (recommended)
GOOGLE_APPLICATION_CREDENTIALS=/home/beautylms/.credentials/serviceAccountKey.json

# Option 2: Inline Firebase credentials (use if file path doesn't work)
# Get these values from your Firebase service account key JSON file
# FIREBASE_TYPE=service_account
# FIREBASE_PRIVATE_KEY_ID=your-private-key-id
# FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour-Private-Key-Here\n-----END PRIVATE KEY-----"
# FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project-id.iam.gserviceaccount.com
# FIREBASE_CLIENT_ID=your-client-id
# FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
# FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
# FIREBASE_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
# FIREBASE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-xxxxx%40your-project-id.iam.gserviceaccount.com

# ===========================
# MEDIASOUP CONFIGURATION
# For 1000-1500 concurrent users in video conferencing
# ===========================

# Listen IP (0.0.0.0 allows binding to all network interfaces)
MEDIASOUP_LISTEN_IP=0.0.0.0

# Announced IP - MUST be your server's public IP address
# Replace with your actual Hostinger VPS public IP
MEDIASOUP_ANNOUNCED_IP=YOUR_SERVER_PUBLIC_IP

# Port range for RTC connections
# Each concurrent video stream requires 2 ports (one for sending, one for receiving)
# For 1500 users: 1500 * 2 = 3000 ports minimum
# Recommended: Use a range of at least 10000 ports
MEDIASOUP_MIN_PORT=40000
MEDIASOUP_MAX_PORT=49999

# ===========================
# CORS CONFIGURATION
# ===========================
# Comma-separated list of allowed origins
# Update with your actual domain(s)
CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ===========================
# SECURITY CONFIGURATION
# ===========================
# Generate a strong JWT secret: openssl rand -base64 64
JWT_SECRET=your-strong-jwt-secret-change-this-in-production

# ===========================
# RECORDING CONFIGURATION
# ===========================
RECORDING_ENABLED=true
RECORDINGS_PATH=/home/beautylms/Beauty-lms/recordings
RECORDING_BASE_URL=https://yourdomain.com
# Generate with: openssl rand -base64 32
RECORDING_SECRET=your-recording-secret-key

# Recording Quality Settings (adjust based on server resources)
# Options: low, medium, high
RECORDING_QUALITY=medium

# Recording Limits
RECORDING_MAX_DURATION=7200
RECORDING_MAX_SIZE_MB=2048

# FFmpeg Settings
FFMPEG_PRESET=fast
FFMPEG_CRF=23
FFMPEG_AUDIO_BITRATE=128k
FFMPEG_VIDEO_BITRATE=2000k

# Cleanup Settings
RECORDING_RETENTION_DAYS=30
RECORDING_AUTO_CLEANUP=true

# ===========================
# LOGGING CONFIGURATION
# ===========================
LOG_LEVEL=info
LOG_TO_FILE=true
LOG_PATH=/home/beautylms/Beauty-lms/logs

# ===========================
# PERFORMANCE TUNING
# For 1000-1500 concurrent users
# ===========================

# Maximum number of concurrent WebSocket connections
MAX_WEBSOCKET_CONNECTIONS=2000

# Maximum number of concurrent HTTP connections
MAX_HTTP_CONNECTIONS=1000

# Keep-alive timeout (milliseconds)
KEEP_ALIVE_TIMEOUT=65000

# Headers timeout (milliseconds)
HEADERS_TIMEOUT=66000

# ===========================
# MONITORING & HEALTH CHECK
# ===========================
HEALTH_CHECK_INTERVAL=30000
ENABLE_METRICS=true
METRICS_PORT=9090

# ===========================
# DATABASE CONNECTION POOLING
# (If using additional database beyond Firebase)
# ===========================
# DB_POOL_MIN=2
# DB_POOL_MAX=10

# ===========================
# REDIS CONFIGURATION
# (Optional - for scaling Socket.IO across multiple instances)
# ===========================
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password
# ENABLE_REDIS_ADAPTER=false
